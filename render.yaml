# ============================================================================
# Render Blueprint for QA Compliance Bot (Free Plan Compatible)
# ============================================================================
# This version avoids Render disks (not allowed on free tier)
# and uses /tmp for ephemeral runtime data.
# ============================================================================

services:
  # ============================================================================
  # FastAPI Backend Service
  # ============================================================================
  - type: web
    name: qa-compliance-api
    runtime: python
    region: oregon
    plan: free
    branch: main
    autoDeploy: true
    buildCommand: pip install -r requirements.txt
    # Ensure /tmp/data exists before starting API
    startCommand: bash -lc "mkdir -p /tmp/data && uvicorn app.api:app --host 0.0.0.0 --port $PORT"
    healthCheckPath: /health
    envVars:
      # Deployment mode
      - key: MODE
        value: production

      # LLM Provider Configuration
      - key: LLM_PROVIDER
        value: groq
      - key: LLM_MODEL
        value: llama-3.1-8b-instant
      - key: LLM_FALLBACK_PROVIDERS
        value: openai

      # API Keys (set securely in Render dashboard)
      - key: GROQ_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: ANTHROPIC_API_KEY
        sync: false

      # Judge Configuration
      - key: JUDGE_PROVIDER
        value: openai
      - key: JUDGE_MODEL
        value: gpt-4o-mini

      # Ephemeral data paths (resets on restart)
      - key: DATA_DIR
        value: /tmp/data
      - key: RUNS_DB
        value: /tmp/qa_runs.duckdb

      # API Configuration
      - key: API_HOST
        value: 0.0.0.0
      # Note: PORT is automatically provided by Render

      # CORS - update with dashboard URL after deployment
      - key: CORS_ORIGINS
        value: "*"  # Replace with your dashboard URL in production

      # Logging
      - key: LOG_LEVEL
        value: INFO

      # A/B Testing
      - key: AB_TEST_BUCKET
        value: on

  # ============================================================================
  # Streamlit Dashboard Service
  # ============================================================================
  - type: web
    name: qa-compliance-dashboard
    runtime: python
    region: oregon
    plan: free
    branch: main
    autoDeploy: true
    buildCommand: pip install -r requirements.txt
    # Ensure /tmp/data exists before starting Streamlit
    startCommand: bash -lc "mkdir -p /tmp/data && streamlit run app/dashboard.py --server.port $PORT --server.address 0.0.0.0 --server.headless true"
    healthCheckPath: /_stcore/health
    envVars:
      # Deployment mode
      - key: MODE
        value: production

      # API Keys (for dashboard use)
      - key: GROQ_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: ANTHROPIC_API_KEY
        sync: false

      # LLM Provider Configuration
      - key: LLM_PROVIDER
        value: groq
      - key: LLM_MODEL
        value: llama-3.1-8b-instant
      - key: LLM_FALLBACK_PROVIDERS
        value: openai

      # Judge Configuration
      - key: JUDGE_PROVIDER
        value: openai
      - key: JUDGE_MODEL
        value: gpt-4o-mini

      # API URL (update after API deploys)
      # Example: https://qa-compliance-api.onrender.com
      - key: API_URL
        value: https://qa-compliance-api.onrender.com

      # Ephemeral data paths (read-only)
      - key: DATA_DIR
        value: /tmp/data
      - key: RUNS_DB
        value: /tmp/qa_runs.duckdb
      # Note: PORT is automatically provided by Render

      # Logging
      - key: LOG_LEVEL
        value: INFO

# ============================================================================
# Notes:
# ============================================================================
# ‚úÖ Works fully on Render Free Plan
# ‚ö†Ô∏è Data in /tmp is deleted on restart or redeploy
# üîê Set API keys securely in Render dashboard
# üåê After first deploy:
#    - Update API_URL in dashboard service with actual backend URL
#    - Update CORS_ORIGINS in API service with dashboard URL
# ============================================================================

